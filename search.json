[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Information and Guidelines for Contributing to fontawesome","title":"Information and Guidelines for Contributing to fontawesome","text":"many ways contribute ongoing development fontawesome package. contributions can rather easy (e.g., fixing typos, improving documentation, filing issues feature requests problems, etc.) whereas contributions can require time patience (like answering questions submitting pull requests code changes). Just know help provided capacity much appreciated. :)","code":""},{"path":"/CONTRIBUTING.html","id":"filing-issues","dir":"","previous_headings":"","what":"Filing Issues","title":"Information and Guidelines for Contributing to fontawesome","text":"believe found bug, create minimal reprex posting fontawesome issue tracker. Try include anything unnecessary, just minimal amount code constitutes reproducible bug. try verify bug running code reprex provided. quality reprex reduce amount back--forth communication trying understand execute code systems.","code":""},{"path":"/CONTRIBUTING.html","id":"answering-questions","dir":"","previous_headings":"","what":"Answering questions","title":"Information and Guidelines for Contributing to fontawesome","text":"great way help simply answering questions. ’s amazing little conversation lead better insights problem. Don’t quite know answer? ’s okay . ’re together. might answer user questions? forums Q&fontawesome include Posit community, Twitter (good search term fontawesome #rstats), Stack Overflow. Good etiquette key interactions: good person ask questions.","code":""},{"path":"/CONTRIBUTING.html","id":"making-pull-requests","dir":"","previous_headings":"Answering questions","what":"Making Pull Requests","title":"Information and Guidelines for Contributing to fontawesome","text":"consider making pull request (PR), please file issue first explain problem detail. PR enhancement, detail change make things better package users. Bugfix PRs also require explanation bug proposed fix remove bug. great way illustrate bug include reprex. upfront work prior preparing PR can time-consuming opens line communication package authors community, perhaps leading better enhancement effective fixes! consensus PR based issue helpful, adhering following process make things proceed quickly: Create separate Git branch PR. Look build status badges making changes; badges available package README. fontawesome package follows tidyverse style guide please adopt style guidelines submitted code best possible. internal documentation uses roxygen2; contribution requires new revised documentation ensure roxygen comments added/modified (modify .Rd files man folder). use testthat code coverage; contributions test cases included helpful easier accept. Ensure signed contributor license agreement. appear “Check” PR comment “CLAassistant” also appear explaining whether yet sign. sign, can click “Recheck” link comment check flip reflect ’ve signed.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018-2023 fontawesome authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/LICENSE.html","id":"attribution-40-international","dir":"","previous_headings":"","what":"Attribution 4.0 International","title":"MIT License","text":"Copyright (c) 2021 Fonticons, Inc. ======================================================================= Creative Commons Corporation (“Creative Commons”) law firm provide legal services legal advice. Distribution Creative Commons public licenses create lawyer-client relationship. Creative Commons makes licenses related information available “-” basis. Creative Commons gives warranties regarding licenses, material licensed terms conditions, related information. Creative Commons disclaims liability damages resulting use fullest extent possible. Using Creative Commons Public Licenses Creative Commons public licenses provide standard set terms conditions creators rights holders may use share original works authorship material subject copyright certain rights specified public license . following considerations informational purposes , exhaustive, form part licenses. ======================================================================= Creative Commons Attribution 4.0 International Public License exercising Licensed Rights (defined ), accept agree bound terms conditions Creative Commons Attribution 4.0 International Public License (“Public License”). extent Public License may interpreted contract, granted Licensed Rights consideration acceptance terms conditions, Licensor grants rights consideration benefits Licensor receives making Licensed Material available terms conditions. Section 1 – Definitions. Adapted Material means material subject Copyright Similar Rights derived based upon Licensed Material Licensed Material translated, altered, arranged, transformed, otherwise modified manner requiring permission Copyright Similar Rights held Licensor. purposes Public License, Licensed Material musical work, performance, sound recording, Adapted Material always produced Licensed Material synched timed relation moving image. Adapter’s License means license apply Copyright Similar Rights contributions Adapted Material accordance terms conditions Public License. Copyright Similar Rights means copyright /similar rights closely related copyright including, without limitation, performance, broadcast, sound recording, Sui Generis Database Rights, without regard rights labeled categorized. purposes Public License, rights specified Section 2(b)(1)-(2) Copyright Similar Rights. Effective Technological Measures means measures , absence proper authority, may circumvented laws fulfilling obligations Article 11 WIPO Copyright Treaty adopted December 20, 1996, /similar international agreements. Exceptions Limitations means fair use, fair dealing, /exception limitation Copyright Similar Rights applies use Licensed Material. Licensed Material means artistic literary work, database, material Licensor applied Public License. Licensed Rights means rights granted subject terms conditions Public License, limited Copyright Similar Rights apply use Licensed Material Licensor authority license. Licensor means individual(s) entity(ies) granting rights Public License. Share means provide material public means process requires permission Licensed Rights, reproduction, public display, public performance, distribution, dissemination, communication, importation, make material available public including ways members public may access material place time individually chosen . Sui Generis Database Rights means rights copyright resulting Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, amended /succeeded, well essentially equivalent rights anywhere world. means individual entity exercising Licensed Rights Public License. corresponding meaning. Section 2 – Scope. License grant. Subject terms conditions Public License, Licensor hereby grants worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license exercise Licensed Rights Licensed Material : reproduce Share Licensed Material, whole part; produce, reproduce, Share Adapted Material. Exceptions Limitations. avoidance doubt, Exceptions Limitations apply use, Public License apply, need comply terms conditions. Term. term Public License specified Section 6(). Media formats; technical modifications allowed. Licensor authorizes exercise Licensed Rights media formats whether now known hereafter created, make technical modifications necessary . Licensor waives /agrees assert right authority forbid making technical modifications necessary exercise Licensed Rights, including technical modifications necessary circumvent Effective Technological Measures. purposes Public License, simply making modifications authorized Section 2() never produces Adapted Material. Downstream recipients. Offer Licensor – Licensed Material. Every recipient Licensed Material automatically receives offer Licensor exercise Licensed Rights terms conditions Public License. downstream restrictions. may offer impose additional different terms conditions , apply Effective Technological Measures , Licensed Material restricts exercise Licensed Rights recipient Licensed Material. endorsement. Nothing Public License constitutes may construed permission assert imply , use Licensed Material , connected , sponsored, endorsed, granted official status , Licensor others designated receive attribution provided Section 3()(1)()(). rights. Moral rights, right integrity, licensed Public License, publicity, privacy, /similar personality rights; however, extent possible, Licensor waives /agrees assert rights held Licensor limited extent necessary allow exercise Licensed Rights, otherwise. Patent trademark rights licensed Public License. extent possible, Licensor waives right collect royalties exercise Licensed Rights, whether directly collecting society voluntary waivable statutory compulsory licensing scheme. cases Licensor expressly reserves right collect royalties. Section 3 – License Conditions. exercise Licensed Rights expressly made subject following conditions. Attribution. Share Licensed Material (including modified form), must: retain following supplied Licensor Licensed Material: identification creator(s) Licensed Material others designated receive attribution, reasonable manner requested Licensor (including pseudonym designated); copyright notice; notice refers Public License; notice refers disclaimer warranties; URI hyperlink Licensed Material extent reasonably practicable; indicate modified Licensed Material retain indication previous modifications; indicate Licensed Material licensed Public License, include text , URI hyperlink , Public License. may satisfy conditions Section 3()(1) reasonable manner based medium, means, context Share Licensed Material. example, may reasonable satisfy conditions providing URI hyperlink resource includes required information. requested Licensor, must remove information required Section 3()(1)() extent reasonably practicable. Share Adapted Material produce, Adapter’s License apply must prevent recipients Adapted Material complying Public License. Section 4 – Sui Generis Database Rights. Licensed Rights include Sui Generis Database Rights apply use Licensed Material: avoidance doubt, Section 2()(1) grants right extract, reuse, reproduce, Share substantial portion contents database; include substantial portion database contents database Sui Generis Database Rights, database Sui Generis Database Rights (individual contents) Adapted Material; must comply conditions Section 3() Share substantial portion contents database. avoidance doubt, Section 4 supplements replace obligations Public License Licensed Rights include Copyright Similar Rights. Section 5 – Disclaimer Warranties Limitation Liability. UNLESS OTHERWISE SEPARATELY UNDERTAKEN LICENSOR, EXTENT POSSIBLE, LICENSOR OFFERS LICENSED MATERIAL --AVAILABLE, MAKES REPRESENTATIONS WARRANTIES KIND CONCERNING LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, . INCLUDES, WITHOUT LIMITATION, WARRANTIES TITLE, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE LATENT DEFECTS, ACCURACY, PRESENCE ABSENCE ERRORS, WHETHER KNOWN DISCOVERABLE. DISCLAIMERS WARRANTIES ALLOWED FULL PART, DISCLAIMER MAY APPLY . EXTENT POSSIBLE, EVENT LICENSOR LIABLE LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OTHERWISE DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, LOSSES, COSTS, EXPENSES, DAMAGES ARISING PUBLIC LICENSE USE LICENSED MATERIAL, EVEN LICENSOR ADVISED POSSIBILITY LOSSES, COSTS, EXPENSES, DAMAGES. LIMITATION LIABILITY ALLOWED FULL PART, LIMITATION MAY APPLY . disclaimer warranties limitation liability provided shall interpreted manner , extent possible, closely approximates absolute disclaimer waiver liability. Section 6 – Term Termination. Public License applies term Copyright Similar Rights licensed . However, fail comply Public License, rights Public License terminate automatically. right use Licensed Material terminated Section 6(), reinstates: automatically date violation cured, provided cured within 30 days discovery violation; upon express reinstatement Licensor. avoidance doubt, Section 6(b) affect right Licensor may seek remedies violations Public License. avoidance doubt, Licensor may also offer Licensed Material separate terms conditions stop distributing Licensed Material time; however, terminate Public License. Sections 1, 5, 6, 7, 8 survive termination Public License. Section 7 – Terms Conditions. Licensor shall bound additional different terms conditions communicated unless expressly agreed. arrangements, understandings, agreements regarding Licensed Material stated herein separate independent terms conditions Public License. Section 8 – Interpretation. avoidance doubt, Public License , shall interpreted , reduce, limit, restrict, impose conditions use Licensed Material lawfully made without permission Public License. extent possible, provision Public License deemed unenforceable, shall automatically reformed minimum extent necessary make enforceable. provision reformed, shall severed Public License without affecting enforceability remaining terms conditions. term condition Public License waived failure comply consented unless expressly agreed Licensor. Nothing Public License constitutes may interpreted limitation upon, waiver , privileges immunities apply Licensor , including legal processes jurisdiction authority. ======================================================================= Creative Commons party public licenses. Notwithstanding, Creative Commons may elect apply one public licenses material publishes instances considered “Licensor.” text Creative Commons public licenses dedicated public domain CC0 Public Domain Dedication. Except limited purpose indicating material shared Creative Commons public license otherwise permitted Creative Commons policies published creativecommons.org/policies, Creative Commons authorize use trademark “Creative Commons” trademark logo Creative Commons without prior written consent including, without limitation, connection unauthorized modifications public licenses arrangements, understandings, agreements concerning use licensed material. avoidance doubt, paragraph form part public licenses. Creative Commons may contacted creativecommons.org.","code":"Considerations for licensors: Our public licenses are  intended for use by those authorized to give the public  permission to use material in ways otherwise restricted by  copyright and certain other rights. Our licenses are  irrevocable. Licensors should read and understand the terms  and conditions of the license they choose before applying it.  Licensors should also secure all rights necessary before  applying our licenses so that the public can reuse the  material as expected. Licensors should clearly mark any  material not subject to the license. This includes other CC-  licensed material, or material used under an exception or  limitation to copyright. More considerations for licensors: wiki.creativecommons.org/Considerations_for_licensors   Considerations for the public: By using one of our public  licenses, a licensor grants the public permission to use the  licensed material under specified terms and conditions. If  the licensor's permission is not necessary for any reason--for  example, because of any applicable exception or limitation to  copyright--then that use is not regulated by the license. Our  licenses grant only permissions under copyright and certain  other rights that a licensor has authority to grant. Use of  the licensed material may still be restricted for other  reasons, including because others have copyright or other  rights in the material. A licensor may make special requests,  such as asking that all changes be marked or described.  Although not required by our licenses, you are encouraged to  respect those requests where reasonable. More considerations  for the public:  wiki.creativecommons.org/Considerations_for_licensees"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Iannone. Author, maintainer. Christophe Dervieux. Contributor. Winston Chang. Contributor. Dave Gandy. Contributor, copyright holder.           Font-Awesome font Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Iannone R (2024). fontawesome: Easily Work 'Font Awesome' Icons. R package version 0.5.3, https://rstudio.github.io/fontawesome/, https://github.com/rstudio/fontawesome.","code":"@Manual{,   title = {fontawesome: Easily Work with 'Font Awesome' Icons},   author = {Richard Iannone},   year = {2024},   note = {R package version 0.5.3, https://rstudio.github.io/fontawesome/},   url = {https://github.com/rstudio/fontawesome}, }"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Work with Font Awesome Icons","text":"Want try ? fontawesome package can installed CRAN: Also, can install development version fontawesome GitHub: encounter bug, usage questions, want share ideas make package better, feel free file issue.","code":"install.packages(\"fontawesome\") devtools::install_github(\"rstudio/fontawesome\")"},{"path":"/index.html","id":"lets-discuss","dir":"","previous_headings":"","what":"Let’s Discuss!","title":"Easily Work with Font Awesome Icons","text":"Let’s talk package fontawesome Discussions! ’s great place ask questions use package, discuss ideas, engage others, much !","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Easily Work with Font Awesome Icons","text":"Please note rstudio/fontawesome project released contributor code conduct.participating project agree abide terms.","code":""},{"path":"/index.html","id":"id_️-governance","dir":"","previous_headings":"","what":"🏛️ Governance","title":"Easily Work with Font Awesome Icons","text":"project primarily maintained Rich Iannone. authors may occasionally assist duties.","code":""},{"path":"/reference/fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Font Awesome icons as SVGs — fa","title":"Generate Font Awesome icons as SVGs — fa","text":"Add one Font Awesome icons SVGs contained within <svg>...<\/svg>. can optionally set certain style attributes. fa() function can used directly within inline evaluations R code R Markdown documents.","code":""},{"path":"/reference/fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Font Awesome icons as SVGs — fa","text":"","code":"fa(   name,   fill = NULL,   fill_opacity = NULL,   stroke = NULL,   stroke_width = NULL,   stroke_opacity = NULL,   height = NULL,   width = NULL,   margin_left = NULL,   margin_right = NULL,   vertical_align = NULL,   position = NULL,   title = NULL,   prefer_type = c(\"regular\", \"solid\"),   a11y = c(\"deco\", \"sem\", \"none\") )"},{"path":"/reference/fa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Font Awesome icons as SVGs — fa","text":"name name Font Awesome icon. short name (e.g., \"npm\", \"drum\", etc.), , full name (e.g., \"fab fa-npm\", \"fas fa-drum\", etc.). names correspond current Version 6 Font Awesome names. list short full names can accessed fa_metadata() function fa_metadata()$icon_names fa_metadata()$icon_names_full. supplying previous name associated icon, internally translated current name Version 6 icon returned. fill, fill_opacity fill color icon can set fill. provided default value \"currentColor\" applied SVG fill matches color parent HTML element's color attribute. opacity level SVG fill can controlled decimal value 0 1. stroke, stroke_width, stroke_opacity stroke options allow setting color, width, opacity SVG outline stroke. default, stroke width small \"1px\" size adjustment \"stroke_width\" can useful. \"stroke_opacity\" value can decimal values 0 1 (bounds included). height, width height width style attributes rendered SVG. nothing provided height default value \"1em\" applied. width given, calculated units \"em\" basis icon's SVG \"viewBox\" dimensions. margin_left, margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. vertical_align vertical alignment icon. default, length \"-0.125em\" used. position value position style attribute. default, \"relative\" used . title option populating SVG 'title' attribute, provides -hover text icon. default, title text given icon. a11y == \"semantic\" title text automatically given rendered icon, however, providing text override . prefer_type Chooses type icon returned : (1) providing short name, (2) icon solid regular types. example, using name = \"address-book\" result two types icons Address Book. default, preference set \"regular\" option \"solid\". a11y Cases distinguish role icon inform accessibility attributes used. Icons can either \"deco\" (decorative, default case) \"sem\" (semantic). Using \"none\" result accessibility features icon.","code":""},{"path":"/reference/fa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Font Awesome icons as SVGs — fa","text":"fontawesome object.","code":""},{"path":"/reference/fa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Font Awesome icons as SVGs — fa","text":"","code":"if (interactive()) {  # Create a Font Awesome SVG icon fa(name = \"r-project\")  }"},{"path":"/reference/fa_html_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a Font Awesome html_dependency — fa_html_dependency","title":"Use a Font Awesome html_dependency — fa_html_dependency","text":"fa_html_dependency() function adds html_dependency object Shiny R Markdown context. allows direct use <> tags refer Font Awesome icons without use fa_i() create tags also add html_dependency document.","code":""},{"path":"/reference/fa_html_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a Font Awesome html_dependency — fa_html_dependency","text":"","code":"fa_html_dependency()"},{"path":"/reference/fa_html_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a Font Awesome html_dependency — fa_html_dependency","text":"html_dependency object.","code":""},{"path":"/reference/fa_html_dependency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use a Font Awesome html_dependency — fa_html_dependency","text":"html_dependency object created internally following invocation:   fa_version object internal object provides released version number Font Awesome icons. can inspected using fa_metadata()$version.","code":"htmltools::htmlDependency(   name = \"font-awesome\",   version = fa_version,   src = \"fontawesome\",   package = \"fontawesome\",   stylesheet = c(\"css/all.min.css\", \"css/v4-shims.min.css\") )"},{"path":"/reference/fa_html_dependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a Font Awesome html_dependency — fa_html_dependency","text":"","code":"if (interactive()) {  # Create a Font Awesome `html_dependency` fa_html_dependency()  }"},{"path":"/reference/fa_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Font Awesome <i> tag — fa_i","title":"Generate a Font Awesome <i> tag — fa_i","text":"fa_i() function creates Font Awesome <> tag SVG fa(). primary use case fa_i() legacy Shiny applications use shiny::icon() function. function called within shiny::icon() call HTML dependencies support icon generation hosted fontawesome package.","code":""},{"path":"/reference/fa_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Font Awesome <i> tag — fa_i","text":"","code":"fa_i(   name,   class = NULL,   ...,   prefer_type = c(\"regular\", \"solid\"),   html_dependency = fa_html_dependency() )"},{"path":"/reference/fa_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Font Awesome <i> tag — fa_i","text":"name name Font Awesome icon. short name (e.g., \"npm\", \"drum\", etc.), , full name (e.g., \"fab fa-npm\", \"fas fa-drum\", etc.). names correspond current Font Awesome names. list short full names can accessed fa_metadata() function fa_metadata()$icon_names fa_metadata()$icon_names_full. supplying known alias short icon name (e.g., \"vcard\", now \"address-card\"), internally translated current icon name returning icon tag. class Additional classes customize style icon. ... Arguments passed <> tag htmltools::tags. prefer_type Chooses type icon returned : (1) providing short name, (2) icon solid regular types. example, using name = \"address-book\" result two types icons Address Book. default, preference set \"regular\" option \"solid\". html_dependency Provides opportunity use custom html_dependency object (created via call htmltools::htmlDependency()) instead one supplied function (uses Font Awesome's free assets bundled package). custom html_dependency object useful paid icons Font Awesome otherwise like customize exactly icon assets used (e.g., woff, woff2, eot, etc.). default, NULL function internally generates html_dependency.","code":""},{"path":"/reference/fa_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Font Awesome <i> tag — fa_i","text":"icon element.","code":""},{"path":"/reference/fa_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Font Awesome <i> tag — fa_i","text":"","code":"if (interactive()) {  # Create a Font Awesome icon object fa_i(name = \"r-project\")  }"},{"path":"/reference/fa_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata on the included Font Awesome assets — fa_metadata","title":"Get metadata on the included Font Awesome assets — fa_metadata","text":"function provide metadata included Font Awesome assets fontawesome package. list returned following components: version: released version number Font Awesome icons icon_count: total count unique Font Awesome icons icon_names: vector short names (e.g., \"npm\", \"drum\", etc.) included icons icon_names_full: vector containing full names (e.g., \"fab fa-npm\", \"fas fa-drum\", etc.) included icons icon_names_fa(r|s|b): Vectors short names within regular (\"r\"), solid (\"s\"), brand (\"b\") groups icon_names_full_fa(r|s|b): Vectors full names icons within regular (\"r\"), solid (\"s\"), brand (\"b\") groups","code":""},{"path":"/reference/fa_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata on the included Font Awesome assets — fa_metadata","text":"","code":"fa_metadata()"},{"path":"/reference/fa_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata on the included Font Awesome assets — fa_metadata","text":"list metadata included Font Awesome assets.","code":""},{"path":"/reference/fa_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata on the included Font Awesome assets — fa_metadata","text":"","code":"if (interactive()) {  # Get information on the Font Awesome # assets included in this package fa_metadata()  }"},{"path":"/reference/fa_png.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PNG version of a Font Awesome icon — fa_png","title":"Create a PNG version of a Font Awesome icon — fa_png","text":"Get Font Awesome icon PNG file. can optionally set fill attribute writing PNG. Additionally, control output width height (usually, icons 512 512 pixels). Please note function requires rsvg installed system. Attempting use fa_png() without rsvg available result error message.","code":""},{"path":"/reference/fa_png.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PNG version of a Font Awesome icon — fa_png","text":"","code":"fa_png(   name,   file = NULL,   fill = NULL,   fill_opacity = NULL,   stroke = NULL,   stroke_width = NULL,   stroke_opacity = NULL,   height = NULL,   width = NULL,   prefer_type = c(\"regular\", \"solid\") )"},{"path":"/reference/fa_png.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PNG version of a Font Awesome icon — fa_png","text":"name name Font Awesome icon. file path output file. NULL, filename take short name icon .png extension applied. fill, fill_opacity fill color icon can set fill. provided default fill color black. opacity level fill color can controlled decimal value 0 1. stroke, stroke_width, stroke_opacity stroke options allow setting color, width, opacity outline stroke. default, stroke width small \"1px\" size adjustment \"stroke_width\" can useful. \"stroke_opacity\" value can decimal values 0 1 (bounds included). height, width output height width rendered PNG. nothing provided output dimensions match input SVG viewBox. prefer_type Chooses type icon returned : (1) providing short name, (2) icon solid regular types. example, using name = \"address-book\" result two types icons Address Book. default, preference set \"regular\" option \"solid\".","code":""},{"path":"/reference/fa_png.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PNG version of a Font Awesome icon — fa_png","text":"PNG file written disk.","code":""},{"path":"/reference/fa_png.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PNG version of a Font Awesome icon — fa_png","text":"","code":"if (interactive()) {  # Create a Font Awesome SVG icon as a # PNG file on disk fa_png(name = \"r-project\")  }"},{"path":"/reference/print.fontawesome.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the fontawesome icon to the Viewer — print.fontawesome","title":"Print the fontawesome icon to the Viewer — print.fontawesome","text":"function show fontawesome icon Viewer.","code":""},{"path":"/reference/print.fontawesome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the fontawesome icon to the Viewer — print.fontawesome","text":"","code":"# S3 method for class 'fontawesome' print(x, view = interactive(), ...)"},{"path":"/reference/print.fontawesome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the fontawesome icon to the Viewer — print.fontawesome","text":"x agent object class fontawesome. view value print()s browse argument. ... additional parameters.","code":""},{"path":"/reference/print.fontawesome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the fontawesome icon to the Viewer — print.fontawesome","text":"return value, called printing Viewer.","code":""},{"path":"/news/index.html","id":"fontawesome-053","dir":"Changelog","previous_headings":"","what":"fontawesome 0.5.3","title":"fontawesome 0.5.3","text":"CRAN release: 2024-11-16 Updated icon set Font Awesome 6.5.2. (#119) Added page pkgdown site contains table showing icons available package. (#113) fa() function now allows percentage values used height width args (#117). (#125) using fa_i(), class value appended fully-qualified name used (#122. (#123, thanks @averissimo!)","code":""},{"path":"/news/index.html","id":"fontawesome-052","dir":"Changelog","previous_headings":"","what":"fontawesome 0.5.2","title":"fontawesome 0.5.2","text":"CRAN release: 2023-08-19 Updated icon set Font Awesome 6.4.2. (#111)","code":""},{"path":"/news/index.html","id":"fontawesome-051","dir":"Changelog","previous_headings":"","what":"fontawesome 0.5.1","title":"fontawesome 0.5.1","text":"CRAN release: 2023-04-18 Updated icon set Font Awesome 6.4.0. (#109)","code":""},{"path":"/news/index.html","id":"fontawesome-050","dir":"Changelog","previous_headings":"","what":"fontawesome 0.5.0","title":"fontawesome 0.5.0","text":"CRAN release: 2023-01-25 Updated icon set Font Awesome 6.2.1. (#102) Closed #101: added vertical_align argument fa() control vertical alignment icons. (#103) Closed #99 #100: reinstated missing ‘.woff2’ files. (#102)","code":""},{"path":"/news/index.html","id":"fontawesome-040","dir":"Changelog","previous_headings":"","what":"fontawesome 0.4.0","title":"fontawesome 0.4.0","text":"CRAN release: 2022-10-25 Updated icon set Font Awesome 6.2.0. (#96) ’s now possible reference icons several previous names. example old icon names \"contact-card\" \"vcard\" map current name \"address-card\". (#96) now prefer_type argument (default: \"regular\") allows register choice solid- regular-type icon available specific short name. (#96)","code":""},{"path":"/news/index.html","id":"fontawesome-030","dir":"Changelog","previous_headings":"","what":"fontawesome 0.3.0","title":"fontawesome 0.3.0","text":"CRAN release: 2022-07-20 Closed #80: Updated icon set Font Awesome 6.1. (#85) Closed #68: full icon names (e.g., \"fab fa-r-project\") now properly parsed verified fa_i() function. (#77) Closed #66 #73: CSS length values (supplied height width options fa() function) now correctly handled contain decimals. (#74)","code":""},{"path":"/news/index.html","id":"fontawesome-022","dir":"Changelog","previous_headings":"","what":"fontawesome 0.2.2","title":"fontawesome 0.2.2","text":"CRAN release: 2021-07-02 .ttf font files (associated CSS) added back pared selection included webfonts (includes .woff .ttf); re-enable compatibility webshot package Windows. (#61)","code":""},{"path":"/news/index.html","id":"fontawesome-021","dir":"Changelog","previous_headings":"","what":"fontawesome 0.2.1","title":"fontawesome 0.2.1","text":"CRAN release: 2021-04-23 Closed #53: margin_right argument fa() now functional, defaulting \"auto\" margin; margin_left argument also added default. (#54) \"desc\" option fa()’s a11y argument now changed \"deco\".","code":""},{"path":"/news/index.html","id":"fontawesome-020","dir":"Changelog","previous_headings":"","what":"fontawesome 0.2.0","title":"fontawesome 0.2.0","text":"CRAN release: 2021-03-28 Closed #42: Support additional R Markdown output formats fa(): pdf_document, word_document, github_document, slidy_presentation, beamer_presentation, ioslides_presentation. (#43) Closed #38: Add accessibility features SVG icons produced fa() new a11y argument. (#41) Fixes rendering issue SVG icons IE11. (#40) Tooltips can added SVG icons prepared fa() using new title argument. Closed #44: collection font files support use fa_i() trimmed just ‘.woff’ variety. (#45) Closed #32, #33: Package dependencies greatly reduced. (#35)","code":""},{"path":"/news/index.html","id":"fontawesome-010","dir":"Changelog","previous_headings":"","what":"fontawesome 0.1.0","title":"fontawesome 0.1.0","text":"CRAN release: 2021-02-22 Added functions fa(), fa_i(), fa_png() preparing Font Awesome icons three ways.","code":""}]
